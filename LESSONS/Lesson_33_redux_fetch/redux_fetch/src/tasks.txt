1. Создать MainPage (со всеми постами) и SinglePostPage (с одним постом). Настроить между ними роутинг
2. Создать store, подключить к приложению
3. Создать postsReducer, подключить к rootReducer, прописать action, принимающий в качестве payload массив объектов по запросу по ссылке https://dummyjson.com/posts
4. Написать запрос, выполняющий этот action 
5. Через консоль проверить как работает запрос
6. Создать PostsContainer, PostItem. Отрисовать на главной странице карточки с постами (title, body, tags, reactions). Стилизовать
7. При клике на - и + реализовать инкремент и декремент количества лайков
8. Добавить каждому посту кнопку (div, стилизованный под кнопку при клике на которую открывает страница http://localhost:3000/:id), где id - это id поста, на который было кликнуто
9. Создать singlePostReducer, создать action, который в качестве payload принимает объект с подробным описание одного товара и помещает этот объект в состояние
10. Написать функцию, отправляющую fetch-запрос по ссылке https://dummyjson.com/posts/:id и выводящую полученные данные в консоль 
11. Поместить полученный по запросу объект в состояние singlePostReducer
12. Из single_post_state (объект) отрисовать контент страницы
13. К каждому посту в правый верхний угол добавить крестик, при клике на который пост удаляется


ДЗ
1. Отрисовать карточки всех юзеров, отправив запрос по ссылке https://jsonplaceholder.typicode.com/users
2. При клике на карточку юзера открывать новую страницу с подробным описанием конкретного юзера (запрос по ссылке https://jsonplaceholder.typicode.com/users/1)