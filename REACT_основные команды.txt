npx create-react-app myapp  
npm i react-router-dom      
npm i redux react-redux
npm i redux-thunk

npm install react-icons

npm start

запуск бэкенда
npm run dev 

------------------------------------------------------------
https://www.npmjs.com/package/redux-thunk


npm i redux-thunk передавать action в dispatch через посредника 

-----------------------------------------------------------------------------------
1_конспект_react 24_05_23

https://nodejs.org/en

1) Устанавливаем версию

v18.16.0

2) npm install -g create-react-app

если выдаёт ошибку то нужно выполнить

sudo npm install -g create-react-app



3) потом перед работой выполняем
создаётся папка myapp файлы объёмные, долго качаются
это нужно делать перед работой 

npx create-react-app myapp

4) потом переходим в Терминале в папку myapp
 cd myapp
в Терминале из папки myapp выполняем команду
  npm start

5) Удаляем все файлы из папки public КРОМЕ файла  index.html

Из папки src оставляем файлы app.css, app.js, index.js
index.css

6) Установить расширение ES7+ React/Redux/ и ещё
Auto Close Tag, Auto Rename Tag

7) Заходим Setting Extension immen include Languages - в этом разделе нажимаем Add и добавляем значения  javascript javascriptreact (это для подсказок при написании кода)

rfce

8) Чтобы проект много места на диске не занимал, можно
удалить папку node_modules. Можно также склонировать нужный проект git clone 'link Github', затем 
перехожу в папку проекта и запускаю команду (подгрузятся
все нужные модули)

npm install



------------------------------------------------------------------------------------

Cписок всех методов массивов в JavaScript

1. concat(): Объединяет два или более массива, создавая новый массив.
2. copyWithin(): Копирует часть массива и вставляет ее внутри этого же массива.
3. entries(): Возвращает итератор, содержащий пары ключ-значение для каждого индекса в массиве.
4. every(): Проверяет, удовлетворяют ли все элементы массива заданному условию.
5. fill(): Заполняет все элементы массива одним значением.
6. filter(): Создает новый массив, содержащий элементы, для которых указанная функция возвращает true.
7. find(): Возвращает первый элемент в массиве, удовлетворяющий заданному условию.
8. findIndex(): Возвращает индекс первого элемента в массиве, удовлетворяющего заданному условию.
9. flat(): Создает новый массив, в котором все вложенные подмассивы "сплющены" в указанную глубину.
10. flatMap(): Создает новый массив, применяя функцию к каждому элементу массива и "сплющивая" результаты в указанную глубину.
11. forEach(): Выполняет указанную функцию один раз для каждого элемента массива.
12. from(): Создает новый массив из объекта, подобного массиву (array-like) или итерируемого объекта.
13. includes(): Проверяет, содержит ли массив указанный элемент.
14. indexOf(): Возвращает индекс первого вхождения указанного элемента в массиве.
15. isArray(): Проверяет, является ли объект массивом.
16. join(): Создает строку, объединяя все элементы массива с заданным разделителем.
17. keys(): Возвращает итератор, содержащий ключи массива.
18. lastIndexOf(): Возвращает индекс последнего вхождения указанного элемента в массиве.
19. map(): Создает новый массив, применяя указанную функцию к каждому элементу исходного массива.
20. pop(): Удаляет последний элемент из массива и возвращает его значение.
21. push(): Добавляет один или несколько элементов в конец массива и возвращает новую длину массива.
22. reduce(): Применяет указанную функцию к аккумулятору и каждому элементу массива для вычисления одного значения.
23. reduceRight(): Применяет указанную функцию к аккумулятору и каждому элементу массива, начиная справа, для вычисления одного значения.
24. reverse(): Изменяет порядок элемент
